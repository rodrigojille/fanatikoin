/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TokenMarketplace,
  TokenMarketplaceInterface,
} from "../../../../src/contracts/solidity/TokenMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_chilizToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_platformFeeRate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFeeRate",
        type: "uint256",
      },
    ],
    name: "PlatformFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "TokenDelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "TokenListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "TokenPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "TokenPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "TokenSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chilizToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "delistToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        internalType: "bool",
        name: "isListed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenDescription",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "listedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listedTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFeeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenSellers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFeeRate",
        type: "uint256",
      },
    ],
    name: "updatePlatformFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "updateTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200183e3803806200183e833981016040819052620000349162000177565b6200003f3362000127565b600180556002805460ff19169055612710811115620000a55760405162461bcd60e51b815260206004820152601860248201527f4665652072617465206d757374206265203c3d2031303025000000000000000060448201526064015b60405180910390fd5b6001600160a01b038216620000fd5760405162461bcd60e51b815260206004820152601960248201527f496e76616c69642043485a20746f6b656e20616464726573730000000000000060448201526064016200009c565b600980546001600160a01b0319166001600160a01b039390931692909217909155600855620001b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156200018b57600080fd5b82516001600160a01b0381168114620001a357600080fd5b6020939093015192949293505050565b61167b80620001c36000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80637093f47f116100a2578063abffc9ac11610071578063abffc9ac14610275578063c464fe6514610288578063d4ee651b1461029b578063eeca08f0146102ae578063f2fde38b146102b757600080fd5b80637093f47f14610226578063715018a6146102495780638da5cb5b14610251578063aa0b59881461026257600080fd5b8063284b1569116100e9578063284b15691461019e5780632a5c792a146101df57806332a56451146101f4578063575a5bcf146101fc5780635c975abb1461020f57600080fd5b80630717d7c31461011b5780630752881a146101305780631f69565f14610143578063204120bc14610170575b600080fd5b61012e6101293660046112e1565b6102ca565b005b61012e61013e3660046112e1565b610479565b61015661015136600461130b565b6109ad565b60405161016795949392919061137d565b60405180910390f35b61019061017e36600461130b565b60036020526000908152604090205481565b604051908152602001610167565b6101c76101ac36600461130b565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610167565b6101e7610b1b565b60405161016791906113d0565b600654610190565b6009546101c7906001600160a01b031681565b60025460ff165b6040519015158152602001610167565b61021661023436600461130b565b60046020526000908152604090205460ff1681565b61012e610b7d565b6000546001600160a01b03166101c7565b61012e61027036600461141d565b610b91565b61012e61028336600461130b565b610c3f565b61012e6102963660046112e1565b610dd8565b61012e6102a93660046112e1565b611031565b61019060085481565b61012e6102c536600461130b565b611106565b6102d261117c565b6102da6111c2565b6001600160a01b0382166103095760405162461bcd60e51b815260040161030090611436565b60405180910390fd5b6000811161034d5760405162461bcd60e51b815260206004820152601160248201527005072696365206d757374206265203e203607c1b6044820152606401610300565b6001600160a01b03821660009081526004602052604090205460ff16156103ad5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88185b1c9958591e481b1a5cdd195960621b6044820152606401610300565b6001600160a01b0382166000818152600460209081526040808320805460ff19166001908117909155600383528184208690556005835281842080546001600160a01b03199081163317909155600680546007865284872081905592830181559094527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018054909316841790925590518381527f252e0864c3c3e0062044056bdcb38cb8949574a594be507fdebe92cd20a23947910160405180910390a261047560018055565b5050565b61048161117c565b6104896111c2565b6001600160a01b0382166104af5760405162461bcd60e51b815260040161030090611436565b6001600160a01b03821660009081526004602052604090205460ff166104e75760405162461bcd60e51b815260040161030090611465565b6000811161052c5760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b6044820152606401610300565b6001600160a01b0382166000908152600360205260408120549061055083836114a5565b905060006127106105628360fa6114a5565b61056c91906114c2565b9050600061057a82846114e4565b600954604051636eb1769f60e11b815233600482015230602482015291925084916001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156105cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f191906114f7565b101561063f5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e742043485a20616c6c6f77616e63650000000000006044820152606401610300565b6001600160a01b0386811660008181526005602052604090819020549051636eb1769f60e11b815292166004830181905230602484015288929091889163dd62ed3e90604401602060405180830381865afa1580156106a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c691906114f7565b10156107145760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e20616c6c6f77616e6365000000006044820152606401610300565b6009546001600160a01b03166323b872dd336107386000546001600160a01b031690565b876040518463ffffffff1660e01b815260040161075793929190611510565b6020604051808303816000875af1158015610776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079a9190611534565b6107e65760405162461bcd60e51b815260206004820152601c60248201527f506c6174666f726d20666565207472616e73666572206661696c6564000000006044820152606401610300565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061081a90339085908890600401611510565b6020604051808303816000875af1158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d9190611534565b6108a15760405162461bcd60e51b815260206004820152601560248201527414d95b1b195c881c185e5b595b9d0819985a5b1959605a1b6044820152606401610300565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906108d190849033908c90600401611510565b6020604051808303816000875af11580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190611534565b6109585760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610300565b60408051888152602081018890526001600160a01b038a169133917f8daf503382665d950e449b86172be5222275c90f4ddf69c29fdaa8237a562a6d910160405180910390a350505050505061047560018055565b6001600160a01b03811660008181526004602081815260408084205460039092528084205481516306fdde0360e01b8152915160ff909316959094606094859485948a94936306fdde03938281019391928290030181865afa158015610a17573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a3f919081019061156c565b9350806001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a7f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aa7919081019061156c565b9250806001600160a01b0316637284e4166040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ae7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b0f919081019061156c565b91505091939590929450565b60606006805480602002602001604051908101604052809291908181526020018280548015610b7357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b55575b5050505050905090565b610b8561121b565b610b8f6000611275565b565b610b9961121b565b610ba161117c565b610ba96111c2565b612710811115610bfb5760405162461bcd60e51b815260206004820152601860248201527f4665652072617465206d757374206265203c3d203130302500000000000000006044820152606401610300565b60088190556040518181527f45610d581145924dd7090a5017e5f2b1d6f42213bb2e95707ff86846bbfcb1ca9060200160405180910390a1610c3c60018055565b50565b610c4761117c565b610c4f6111c2565b6001600160a01b03811660009081526004602052604090205460ff16610c875760405162461bcd60e51b815260040161030090611465565b6001600160a01b038116600090815260036020908152604080832083905560048252808320805460ff191690556007909152812054600654909190610cce906001906114e4565b9050808214610d5657600060068281548110610cec57610cec611619565b600091825260209091200154600680546001600160a01b039092169250829185908110610d1b57610d1b611619565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559290911681526007909152604090208290555b6006805480610d6757610d6761162f565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038516808352600790915260408083208390555190917f6621c4efc5efa31320394260425b7d14cbb9d7e3754b2c98c04af66b1cbf315b91a25050610c3c60018055565b610de061117c565b610de86111c2565b6001600160a01b038216610e0e5760405162461bcd60e51b815260040161030090611436565b6001600160a01b03821660009081526004602052604090205460ff16610e465760405162461bcd60e51b815260040161030090611465565b60008111610e8b5760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b6044820152606401610300565b6001600160a01b03821660009081526003602052604081205490610eaf83836114a5565b6040516323b872dd60e01b815290915084906001600160a01b038216906323b872dd90610ee490339030908990600401611510565b6020604051808303816000875af1158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f279190611534565b5060095460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610f79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9d9190611534565b610fdf5760405162461bcd60e51b815260206004820152601360248201527210d216881d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610300565b60408051858152602081018590526001600160a01b0387169133917fa8a7473f10e62cf9687e243de1c3ac8b3cbc3dd04b96826beb3a65b595385814910160405180910390a350505061047560018055565b6001600160a01b03821660009081526004602052604090205460ff166110695760405162461bcd60e51b815260040161030090611465565b600081116110ad5760405162461bcd60e51b815260206004820152601160248201527005072696365206d757374206265203e203607c1b6044820152606401610300565b6001600160a01b03821660008181526003602052604090819020839055517fceb40be0a58aa33916c199e469842b614ef313295573c15d82f85cc9d1a89d32906110fa9084815260200190565b60405180910390a25050565b61110e61121b565b6001600160a01b0381166111735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610300565b610c3c81611275565b60025460ff1615610b8f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610300565b6002600154036112145760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610300565b6002600155565b6000546001600160a01b03163314610b8f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610300565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146112dc57600080fd5b919050565b600080604083850312156112f457600080fd5b6112fd836112c5565b946020939093013593505050565b60006020828403121561131d57600080fd5b611326826112c5565b9392505050565b60005b83811015611348578181015183820152602001611330565b50506000910152565b6000815180845261136981602086016020860161132d565b601f01601f19169290920160200192915050565b851515815284602082015260a06040820152600061139e60a0830186611351565b82810360608401526113b08186611351565b905082810360808401526113c48185611351565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156114115783516001600160a01b0316835292840192918401916001016113ec565b50909695505050505050565b60006020828403121561142f57600080fd5b5035919050565b602080825260159082015274496e76616c696420746f6b656e206164647265737360581b604082015260600190565b60208082526010908201526f151bdad95b881b9bdd081b1a5cdd195960821b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176114bc576114bc61148f565b92915050565b6000826114df57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156114bc576114bc61148f565b60006020828403121561150957600080fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561154657600080fd5b8151801515811461132657600080fd5b634e487b7160e01b600052604160045260246000fd5b60006020828403121561157e57600080fd5b815167ffffffffffffffff8082111561159657600080fd5b818401915084601f8301126115aa57600080fd5b8151818111156115bc576115bc611556565b604051601f8201601f19908116603f011681019083821181831017156115e4576115e4611556565b816040528281528760208487010111156115fd57600080fd5b61160e83602083016020880161132d565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220bb81f85f4857d4c5fe9bb46574d3cd773add4da197a65efa904b6f3bd83f178f64736f6c63430008110033";

type TokenMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenMarketplace__factory extends ContractFactory {
  constructor(...args: TokenMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _chilizToken: AddressLike,
    _platformFeeRate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _chilizToken,
      _platformFeeRate,
      overrides || {}
    );
  }
  override deploy(
    _chilizToken: AddressLike,
    _platformFeeRate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _chilizToken,
      _platformFeeRate,
      overrides || {}
    ) as Promise<
      TokenMarketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenMarketplace__factory {
    return super.connect(runner) as TokenMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenMarketplaceInterface {
    return new Interface(_abi) as TokenMarketplaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenMarketplace {
    return new Contract(address, _abi, runner) as unknown as TokenMarketplace;
  }
}
